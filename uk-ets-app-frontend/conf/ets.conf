server {
    listen       80;
    server_name  REPLACE_ME_WITH_FQDN;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;
    add_header Strict-Transport-Security "max-age=15768000" always;
    add_header Content-Security-Policy "script-src 'self'; object-src 'self';" always;
    add_header Referrer-Policy no-referrer;
    add_header X-Permitted-Cross-Domain-Policies none;
    add_header Clear-Site-Data "cache,cookies,storage";
    add_header Cross-Origin-Embedder-Policy "require-corp";
    add_header Cross-Origin-Opener-Policy "same-origin";
    add_header Cross-Origin-Resource-Policy "same-origin";


    limit_conn perip 100;
    limit_conn perserver 100;

    location ~ /(.*)/actuator/(.*)$ {
        deny all;
    }

    location ~ (.*)/auth/metrics(.*)$ {
        deny all;
    }

    location /auth {
    include /etc/nginx/global_headers.conf;
	proxy_redirect   off;
	proxy_set_header Host $host;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
	set $keycloak  REPLACE_ME_WITH_KEYCLOAK_FQDN ;
	proxy_pass http://$keycloak;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /api-registration {
    include /etc/nginx/global_headers.conf;
	add_header Access-Control-Allow-Origin *;
	set $registration REPLACE_ME_WITH_REGISTRATION_FQDN ;
	proxy_pass http://$registration;
	}

    location /itl-receiving/itl-ws {
    include /etc/nginx/global_headers.conf;
	add_header Access-Control-Allow-Origin *;
	set $receiving_endpoint REPLACE_ME_WITH_RECEIVING_FQDN ;
	proxy_pass http://$receiving_endpoint/itl-ws;
	}

    location /api-password-validate {
    include /etc/nginx/global_headers.conf;
	add_header Access-Control-Allow-Origin *;
	set $password_validator REPLACE_ME_WITH_PASS_VALIDATOR_FQDN ;
	proxy_pass http://$password_validator;
	}

    location /api-reports {
    include /etc/nginx/global_headers.conf;
	add_header Access-Control-Allow-Origin *;
	set $api_reports REPLACE_ME_WITH_REPORTS_API_FQDN ;
	proxy_pass http://$api_reports;
	}

    location /api-publication {
    include /etc/nginx/global_headers.conf;
        add_header Access-Control-Allow-Origin *;
        set $api_reports REPLACE_ME_WITH_PUBLICATION_API_FQDN ;
        proxy_pass http://$api_reports;
        }

    location /vault/ {
    include /etc/nginx/global_headers.conf;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header Host $host;
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Accept-Encoding "";

	# to proxy WebSockets in nginx
	set $vault REPLACE_ME_WITH_VAULT_FQDN ;
	proxy_pass http://$vault/;
	proxy_redirect /ui/ /vault/ui/;

	#rewrite html baseurkl
	sub_filter '<head>' '<head><base href="/vault/">';
	#sub_filter_once on;
	sub_filter '"/ui/' '"ui/';
	#sub_filter '"/v1/' '"/vault/v1/';
	sub_filter_once off;
	#sub_filter_types application/javascript text/html;
	}

    location /v1 {
    include /etc/nginx/global_headers.conf;
	set $vault REPLACE_ME_WITH_VAULT_FQDN ;
	proxy_pass http://$vault;
	}

    location /cookies {
    include /etc/nginx/global_headers.conf;
	set $cookies_page REPLACE_ME_WITH_COOKIES_FQDN ;
	proxy_pass http://$cookies_page;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
    
    rewrite ^([^.]*[^/])$ $1/ permanent;
	}

    location = /api-signing/sign {
    include /etc/nginx/global_headers.conf;
	add_header Access-Control-Allow-Origin *;
	set $signing REPLACE_ME_WITH_SIGNING_FQDN;
	proxy_pass http://$signing;
	}

    location /registration {
    include /etc/nginx/global_headers.conf;
	rewrite ^/registration/(.*)$ /$1 break;
	try_files $uri $uri/ /index.html;
	proxy_redirect     off;
	proxy_set_header   Host $host;
	set $registry REPLACE_ME_WITH_REGISTRY_FQDN ;
	proxy_pass http://$registry;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /account-opening {
    include /etc/nginx/global_headers.conf;
	rewrite ^/account-opening/(.*)$ /$1 break;
	try_files $uri $uri/ /index.html;
	proxy_redirect     off;
	proxy_set_header   Host $host;
	set $registry REPLACE_ME_WITH_REGISTRY_FQDN ;
	proxy_pass http://$registry;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /dashboard {
    include /etc/nginx/global_headers.conf;
	rewrite ^/dashboard/(.*)$ /$1 break;
	try_files $uri $uri/ /index.html;
	proxy_redirect     off;
	proxy_set_header   Host $host;
	set $registry REPLACE_ME_WITH_REGISTRY_FQDN ;
	proxy_pass http://$registry;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /emailInfo {
    include /etc/nginx/global_headers.conf;
	rewrite ^/emailInfo/(.*)$ /$1 break;
	try_files $uri $uri/ /index.html;
	proxy_redirect     off;
	proxy_set_header   Host $host;
	set $registry REPLACE_ME_WITH_REGISTRY_FQDN ;
	proxy_pass http://$registry;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /emailConfirm {
    include /etc/nginx/global_headers.conf;
	rewrite ^/emailConfirm/(.*)$ /$1 break;
	try_files $uri $uri/ /index.html;
	proxy_redirect     off;
	proxy_set_header   Host $host;
	set $registry REPLACE_ME_WITH_REGISTRY_FQDN ;
	proxy_pass http://$registry;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /forgot-password {
    include /etc/nginx/global_headers.conf;
	rewrite ^/forgot-password/(.*)$ /$1 break;
	try_files $uri $uri/ /index.html;
	proxy_redirect     off;
	proxy_set_header   Host $host;
	set $registry REPLACE_ME_WITH_REGISTRY_FQDN ;
	proxy_pass http://$registry;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /token-change {
    include /etc/nginx/global_headers.conf;
	rewrite ^/token-change/(.*)$ /$1 break;
	try_files $uri $uri/ /index.html;
	proxy_redirect     off;
	proxy_set_header   Host $host;
	set $registry REPLACE_ME_WITH_REGISTRY_FQDN ;
	proxy_pass http://$registry;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /email-change {
    include /etc/nginx/global_headers.conf;
	rewrite ^/email-change/(.*)$ /$1 break;
	try_files $uri $uri/ /index.html;
	proxy_redirect     off;
	proxy_set_header   Host $host;
	set $registry REPLACE_ME_WITH_REGISTRY_FQDN ;
	proxy_pass http://$registry;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /emergency-otp-change {
    include /etc/nginx/global_headers.conf;
	rewrite ^/emergency-otp-change/(.*)$ /$1 break;
	try_files $uri $uri/ /index.html;
	proxy_redirect     off;
	proxy_set_header   Host $host;
	set $registry REPLACE_ME_WITH_REGISTRY_FQDN ;
	proxy_pass http://$registry;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /emergency-password-otp-change {
    include /etc/nginx/global_headers.conf;
	rewrite ^/emergency-password-otp-change/(.*)$ /$1 break;
	try_files $uri $uri/ /index.html;
	proxy_redirect     off;
	proxy_set_header   Host $host;
	set $registry REPLACE_ME_WITH_REGISTRY_FQDN ;
	proxy_pass http://$registry;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /password-change {
    include /etc/nginx/global_headers.conf;
	rewrite ^/password-change/(.*)$ /$1 break;
	try_files $uri $uri/ /index.html;
	proxy_redirect     off;
	proxy_set_header   Host $host;
	set $registry REPLACE_ME_WITH_REGISTRY_FQDN ;
	proxy_pass http://$registry;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /maintenance {
    include /etc/nginx/global_headers.conf;
	proxy_redirect   off;
	proxy_set_header Host $host;
	set $maintenance REPLACE_ME_WITH_MAINTENANCE_FQDN ;
	proxy_pass http://$maintenance;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /digital-dashboard {
    include /etc/nginx/global_headers.conf;
	proxy_redirect   off;
	proxy_set_header Host $host;
	set $digital_dashboard REPLACE_ME_WITH_DIGITAL_DASHBOARD_FQDN ;
	proxy_pass http://$digital_dashboard;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /digital-survey {
    include /etc/nginx/global_headers.conf;
	proxy_redirect   off;
	proxy_set_header Host $host;
	set $digital_dashboard REPLACE_ME_WITH_DIGITAL_DASHBOARD_FQDN ;
	proxy_pass http://$digital_dashboard;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /digital-confirmation {
    include /etc/nginx/global_headers.conf;
	proxy_redirect   off;
	proxy_set_header Host $host;
	set $digital_dashboard REPLACE_ME_WITH_DIGITAL_DASHBOARD_FQDN ;
	proxy_pass http://$digital_dashboard;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /digital-error {
    include /etc/nginx/global_headers.conf;
	proxy_redirect   off;
	proxy_set_header Host $host;
	set $digital_dashboard REPLACE_ME_WITH_DIGITAL_DASHBOARD_FQDN ;
	proxy_pass http://$digital_dashboard;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /api-user-feedback {
    include /etc/nginx/global_headers.conf;
	add_header Access-Control-Allow-Origin *;
	set $user_feedback REPLACE_ME_WITH_FEEDBACK_FQDN ;
	proxy_pass http://$user_feedback;
	}

    location /assets {
    include /etc/nginx/global_headers.conf;
	proxy_set_header   Host $host;
	proxy_redirect     off;
	set $registry REPLACE_ME_WITH_REGISTRY_FQDN ;
	proxy_pass http://$registry;
	expires 1h;
	add_header Cache-Control "public, no-transform";
	}

    location /css {
    include /etc/nginx/global_headers.conf;
	proxy_set_header   Host $host;
	proxy_redirect     off;
	set $landing_page  REPLACE_ME_WITH_LANDING_FQDN ;
	proxy_pass http://$landing_page;
	}

    location /js {
    include /etc/nginx/global_headers.conf;
	proxy_set_header   Host $host;
	proxy_redirect     off;
	set $landing_page  REPLACE_ME_WITH_LANDING_FQDN ;
	proxy_pass http://$landing_page;
	}

    location ~ ^/$ {
    include /etc/nginx/global_headers.conf;
	proxy_set_header   Host $host;
	proxy_redirect     off;
	set $landing_page  REPLACE_ME_WITH_LANDING_FQDN ;
	proxy_pass http://$landing_page;
	}

    location /landing {
    include /etc/nginx/global_headers.conf;
    proxy_set_header Host $host;
    proxy_redirect   off;
	set $landing_page  REPLACE_ME_WITH_LANDING_FQDN ;
	proxy_pass http://$landing_page;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /uketr-rules {
    include /etc/nginx/global_headers.conf;
    proxy_set_header Host $host;
    proxy_redirect   off;
	set $landing_page  REPLACE_ME_WITH_LANDING_FQDN ;
	proxy_pass http://$landing_page;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /accessibility {
    include /etc/nginx/global_headers.conf;
    proxy_set_header Host $host;
    proxy_redirect   off;
	set $landing_page  REPLACE_ME_WITH_LANDING_FQDN ;
	proxy_pass http://$landing_page;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /contact-us {
    include /etc/nginx/global_headers.conf;
    proxy_set_header Host $host;
    proxy_redirect   off;
	set $landing_page  REPLACE_ME_WITH_LANDING_FQDN ;
	proxy_pass http://$landing_page;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /privacy {
    include /etc/nginx/global_headers.conf;
    proxy_set_header Host $host;
    proxy_redirect   off;
	set $landing_page  REPLACE_ME_WITH_LANDING_FQDN ;
	proxy_pass http://$landing_page;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}

    location /kp-reports {
        include /etc/nginx/global_headers.conf;
        proxy_set_header Host $host;
        proxy_redirect   off;
		set $landing_page  REPLACE_ME_WITH_LANDING_FQDN ;
        proxy_pass http://$landing_page;
        # kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
        }

    location /ets-reports {
        include /etc/nginx/global_headers.conf;
        proxy_set_header Host $host;
        proxy_redirect   off;
		set $landing_page  REPLACE_ME_WITH_LANDING_FQDN ;
        proxy_pass http://$landing_page;
        # kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
        }

    location /api-ui-logs/ {
        include /etc/nginx/global_headers.conf;
        proxy_set_header Host $host;
        proxy_redirect   off;
		set $ui_logs  REPLACE_ME_WITH_UILOGS_FQDN ;
        proxy_pass http://$ui_logs;
        # kill cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
        }
        
    location / {
        include /etc/nginx/global_headers.conf;
        proxy_set_header Host $host;
        proxy_redirect   off;
	set $registry REPLACE_ME_WITH_REGISTRY_FQDN ;
	proxy_pass http://$registry;
	# kill cache
	add_header Last-Modified $date_gmt;
	add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	if_modified_since off;
	expires off;
	etag off;
	}
    
    location = /health {
        include /etc/nginx/global_headers.conf;
        add_header Content-Type text/plain;
        return 200 "OK";
	}

    # Live Status
    #error_page 301 302 307 = /errorpage;
    error_page 403 404 https://$server_name/errorpage;
    error_page 500 502 503 504 https://$server_name/errorpage;
    location /errorpage {
        include /etc/nginx/global_headers.conf;
        proxy_set_header Host $host;
        proxy_redirect   off;
	set $error_page  REPLACE_ME_WITH_ERROR_FQDN ;
	proxy_pass http://$error_page;
	}

    ## Maintenance Status
    #error_page 301 302 307 = /maintenance;
    #error_page 404 = /maintenance;
    #error_page 500 501 502 503 504 = /maintenance;
    #location /maintenance {
    #    proxy_pass http://maintenance-page.prod.discovery;
    #    }
}
